openapi: 3.0.0
info:
  title: Coronatime API
  description: Here goes description
  version: 0.1.9

servers:
  - url: http://localhost:8000/api
    description: local server
  - url: http://producation.app/api
    description: production server

paths:
  /login:
    post:
      summary: User login.
      responses:
        '200':
          description: Successfully logged in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                    default: 60
                  user:
                    type: object
      requestBody:
        required: true
        content:
           application/json:
            schema:
             type: object
             properties:
               user:
                 type: string
               password:
                 type: string
               remember_token:
                 type: boolean
                 default: false
  /register:
    post:
      summary: User register.
      responses:
        '200':
          description: User successfully registered.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
  /successfully-verified/{token}:
    post:
      summary: User email verification.
      responses:
        '200':
          description: User successfully verified.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                    default: 60
                  user:
                    type: object
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: The user token.
  /forgot-passsword:
    post:
      summary: Send mail to user who forgot his password.
      responses:
        '200':
          description: Forgot password email sent.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
  /reset-password/{token}:
    post:
      summary: Reset user's password.
      responses:
        '200':
          description: User password updated successfully.
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: The user token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                token:
                  type: string
  /auth/google/redirect:
    get:
      summary: Get google redirect url.
      responses:
        '200':
          description: Google url get successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
  /auth/google/callback:
    get:
      summary: Send callback to server to authorize user with google and get JWT token.
      responses:
        '200':
          description: User authorized with google successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                    default: 60
                  user:
                    type: object

  /logout:
    post:
      summary: Log out user from server-side.
      responses:
        '200':
          description: User logged out successfully.

  /user/{user}:
    get:
      summary: Show user by id.
      responses:
        '200':
          description: User get successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                 properties:
                  id:
                    type: integer
                    default: 1
                  username:
                    type: string
                    default: 'jamesbond'
                  email:
                    type: string
                    default: 'bingo@gmail.com'
                  avatar:
                    type: string
                    default: 'file911.png'
                  provider:
                    type: string
                    default: null
                  created_at:
                    type: string
                    default: 2022-08-04 18:22:38
      parameters:
        - in: path
          name: user
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
          description: Requested User ID.
  /user/{user}/update:
    post:
      summary: Update user information.
      responses:
        '200':
          description: User get successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      default: 1
                    username:
                      type: string
                      default: 'jamesbond'
                    email:
                      type: string
                      default: 'bingo@gmail.com'
                    avatar:
                      type: string
                      default: 'file911.png'
                    provider:
                      type: string
                      default: null
                    created_at:
                      type: string
                      default: 2022-08-04 18:22:38
      parameters:
        - in: path
          name: user
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
          description: Requested User ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                avatar:
                  type: string
  /quote/{quote}:
    post:
      summary: Add comment to quote.
      responses:
        '200':
          description: Comment added successfully.
      parameters:
        - in: path
          name: quote
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
          description: Requested Quote ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
    get:
      summary: Add like to quote, start broadcasting.
      responses:
        '200':
          description: Like added successfully.
      parameters:
        - in: path
          name: quote
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
          description: Requested Quote ID.
  /genres:
    get:
      summary: Get all genres.
      responses:
        '200':
          description: Request successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      default: 1
                    name:
                      type: string
                      default: 'Comedy'
                    created_at:
                      type: string
                      default: 2022-08-04 18:22:38
                    updated_at:
                      type: string
                      default: 2022-08-04 18:22:38


